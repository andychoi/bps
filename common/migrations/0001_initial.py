# Generated by Django 5.2.3 on 2025-07-15 04:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("alias", models.CharField(blank=True, max_length=50)),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="Company"
                    ),
                ),
                (
                    "dept_name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Dept Name"
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Job title"
                    ),
                ),
                (
                    "officelocation",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Office location",
                    ),
                ),
                (
                    "userType",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="user Type"
                    ),
                ),
                (
                    "onPremisesSamAccountName",
                    models.CharField(
                        blank=True, max_length=12, null=True, verbose_name="samAccount"
                    ),
                ),
                (
                    "acccountEnabled",
                    models.BooleanField(
                        default=True, null=True, verbose_name="accountEnabled"
                    ),
                ),
                ("path", models.CharField(blank=True, max_length=255, null=True)),
                ("tree", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "depth",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subordinates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "permissions": [("can_edit_superuser", "Can edit superuser status")],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserInactive",
            fields=[],
            options={
                "verbose_name": "User (inactive)",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("common.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OrgUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(db_index=True, max_length=10)),
                ("name", models.CharField(db_index=True, max_length=250)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("DIRECT", "Direct"),
                            ("SUPPORT", "Support"),
                            ("ADMIN", "Admin"),
                            ("NOT", "Not Categorized"),
                        ],
                        default="NOT",
                        max_length=10,
                        verbose_name="Category",
                    ),
                ),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Company"),
                            (1, "Division"),
                            (2, "Sub-Div"),
                            (3, "Department"),
                            (4, "Team"),
                            (9, "Unknown"),
                        ],
                        default=9,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="Company"
                    ),
                ),
                (
                    "cc_code",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Cost Center Code",
                    ),
                ),
                (
                    "head",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="head_of_org",
                        related_query_name="bps_orgunit_as_head",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sub_org",
                        to="common.orgunit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Org Unit",
                "verbose_name_plural": "Org Units",
                "ordering": ["code"],
            },
        ),
        migrations.AddField(
            model_name="user",
            name="orgunit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="org_members",
                to="common.orgunit",
                verbose_name="Org Unit",
            ),
        ),
        migrations.CreateModel(
            name="OrgunitRetired",
            fields=[],
            options={
                "verbose_name": "Orgunit (retired)",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("common.orgunit",),
        ),
    ]
